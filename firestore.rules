rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // User profile และ flashcards
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User profile subcollection
      match /profile/{profileId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null 
          && request.auth.uid == userId
          && validateUserProfile();
      }
      
      // User's card sets subcollection
      match /cardSets/{cardSetId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Cards within a specific card set
        match /cards/{cardId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
      
      // Card set progress tracking
      match /cardSetProgress/{cardSetId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null 
          && request.auth.uid == userId
          && validateCardSetProgress();
      }
      
      // Legacy: User's flashcards subcollection (for backward compatibility)
      match /cards/{cardId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Guest mode (session-based)
    match /guests/{sessionId} {
      allow read, write: if true; // อาจจะต้องปรับปรุงให้ปลอดภัยกว่านี้
      
      match /cards/{cardId} {
        allow read, write: if true;
      }
    }
  }

  // Helper functions for validation
  function validateUserProfile() {
    return request.resource.data.keys().hasAll(['uid', 'email', 'displayName', 'createdAt', 'lastLoginAt', 'isActive'])
      && request.resource.data.uid is string
      && request.resource.data.uid == request.auth.uid
      && request.resource.data.isActive is bool
      && (request.resource.data.email == null || request.resource.data.email is string)
      && (request.resource.data.displayName == null || request.resource.data.displayName is string)
      && (request.resource.data.photoURL == null || request.resource.data.photoURL is string)
      && (request.resource.data.totalReviewsCount == null || request.resource.data.totalReviewsCount is number)
      && (request.resource.data.preferredLanguage == null || request.resource.data.preferredLanguage is string)
      && (request.resource.data.theme == null || request.resource.data.theme in ['light', 'dark', 'system'])
      && (request.resource.data.migratedFromGuest == null || request.resource.data.migratedFromGuest is bool);
  }
  
  function validateCardSetProgress() {
    return request.resource.data.keys().hasAll(['cardSetId', 'totalCards', 'reviewedCards', 'progressPercentage', 'updatedAt'])
      && request.resource.data.cardSetId is string
      && request.resource.data.totalCards is number
      && request.resource.data.reviewedCards is number  
      && request.resource.data.progressPercentage is number
      && request.resource.data.totalCards >= 0
      && request.resource.data.reviewedCards >= 0
      && request.resource.data.reviewedCards <= request.resource.data.totalCards
      && request.resource.data.progressPercentage >= 0
      && request.resource.data.progressPercentage <= 100;
  }
}
